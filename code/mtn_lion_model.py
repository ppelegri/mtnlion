# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-12-02 13:07:48
"""
import arcpy
from arcpy.sa import *
from arcpy.sa import *

def Model1():  # Model 1

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageAnalyst")
    arcpy.CheckOutExtension("3D")

    arcpy.ImportToolbox(r"R:\ESM270\Week5_Circuitscape\linkage_mapper_3_0_0\toolbox\Linkage Mapper.tbx")
    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb", workspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb"):
        Circuitscape_output = "C:\\Circuitscape_output"
        habitat_cores = "habitat_cores"
        habitat_suitability_dellinger_2020 = arcpy.Raster("habitat_suitability_dellinger_2020")
        land_cover_2050_a1b = arcpy.Raster("land_cover_2050_a1b")
        land_cover_2005 = arcpy.Raster("land_cover_2005")

        # Process: Clip Raster (Clip Raster) (management)
        habitat_suitability_socal_clip = "H:\\270\\Final_Proposal\\270P_ArcPro\\270P_ArcPro.gdb\\habitat_suitability_socal_clip"
        with arcpy.EnvManager(scratchWorkspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb", workspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb"):
            arcpy.management.Clip(in_raster=habitat_suitability_dellinger_2020, rectangle="-65000 -530000 445000 -250000", out_raster=habitat_suitability_socal_clip, in_template_dataset="", nodata_value="3.4e+38", clipping_geometry="NONE", maintain_clipping_extent="NO_MAINTAIN_EXTENT")
            habitat_suitability_socal_clip = arcpy.Raster(habitat_suitability_socal_clip)

        # Process: Raster Calculator (Raster Calculator) (sa)
        resistance_layer = "H:\\270\\Final_Proposal\\270P_ArcPro\\270p_arcpro.gdb\\resistance_layer"
        Raster_Calculator = resistance_layer
        with arcpy.EnvManager(outputCoordinateSystem="PROJCS['Albers_Conical_Equal_Area',GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Albers'],PARAMETER['false_easting',0.0],PARAMETER['false_northing',0.0],PARAMETER['central_meridian',-96.0],PARAMETER['standard_parallel_1',29.5],PARAMETER['standard_parallel_2',45.5],PARAMETER['latitude_of_origin',23.0],UNIT['Meter',1.0]]", scratchWorkspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb", snapRaster=land_cover_2050_a1b, 
                              workspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb"):
            resistance_layer = 100- 99*((1-Exp(-8*habitat_suitability_socal_clip))/(1-Exp(-8)))
            resistance_layer.save(Raster_Calculator)


        # Process: Resample (Resample) (management)
        resistance_250m = "H:\\270\\Final_Proposal\\270P_ArcPro\\270P_ArcPro.gdb\\resistance_250m"
        with arcpy.EnvManager(scratchWorkspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb", workspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb"):
            arcpy.management.Resample(in_raster=resistance_layer, out_raster=resistance_250m, cell_size="250 250", resampling_type="NEAREST")
            resistance_250m = arcpy.Raster(resistance_250m)

        # Process: Build Network and Map Linkages (Build Network and Map Linkages) (LinkageMapper)
        Output_for_ModelBuilder_Precondition = ""
        arcpy.LinkageMapper.MapLinkages(Project_Directory=Circuitscape_output, Core_Area_Feature_Class=habitat_cores, Core_Area_Field_Name="OBJECTID", Resistance_Raster=resistance_250m, Step_1_-_Identify_Adjacent_Core_Areas=True, Step_2_-_Construct_a_Network_of_Core_Areas=True, Network_Adjacency_Method="Cost-Weighted & Euclidean", Core_Area_Distances_File="", Step_3_-_Calculate_Cost-Weighted_Distances_and_Least_Cost_Paths=True, Drop_Corridors_that_Intersect_Core_Areas=True, Step_4_-_Prune_Network_Using_Options_Below=False, Option_A___Maxium_Number_of_Connected_Nearest_Neighbors="4", Option_B_-_Nearest_Neighbor_Measurement_Unit="Cost-Weighted", Option_C_-_Connect_Neighboring_Constellations=True, Step_5_-_Calculate__Normalize_and_Mosaic_Corridors=True, Truncate_Corridors=True, Truncate_Cost_Weighted_Distance_Threshold=20000, Bounding_Circles_Buffer_Distance=None, Maximum_Cost-Weighted_Corridor_Distance=None, Maximum_Euclidean_Corridor_Distance=None, Output_for_ModelBuilder_Precondition=Output_for_ModelBuilder_Precondition, Custom_Settings_File="")

        # Process: Reclassify (Reclassify) (sa)
        landcover_2050_reclass = "H:\\270\\Final_Proposal\\270P_ArcPro\\270P_ArcPro.gdb\\landcover_2050_reclass"
        Reclassify = landcover_2050_reclass
        with arcpy.EnvManager(outputCoordinateSystem="GEOGCS['GCS_WGS_1984',DATUM['D_WGS_1984',SPHEROID['WGS_1984',6378137.0,298.257223563]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]]"):
            landcover_2050_reclass = arcpy.sa.Reclassify(in_raster=land_cover_2050_a1b, reclass_field="Value", remap="0 0;1 0;2 1;3 0;4 0;5 0;6 0;7 0;8 0;9 0;10 0;11 0;12 0;13 0;14 0;15 0;16 0;17 0", missing_values="DATA")
            landcover_2050_reclass.save(Reclassify)


        # Process: Reclassify (2) (Reclassify) (sa)
        landcover_2005_reclass = "H:\\270\\Final_Proposal\\270P_ArcPro\\270P_ArcPro.gdb\\landcover_2005_reclass"
        Reclassify_2_ = landcover_2005_reclass
        with arcpy.EnvManager(outputCoordinateSystem="GEOGCS['GCS_WGS_1984',DATUM['D_WGS_1984',SPHEROID['WGS_1984',6378137.0,298.257223563]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]]"):
            landcover_2005_reclass = arcpy.sa.Reclassify(in_raster=land_cover_2005, reclass_field="Value", remap="0 0;1 0;2 1;3 0;4 0;5 0;6 0;7 0;8 0;9 0;10 0;11 0;12 0;13 0;14 0;15 0;16 0;17 0", missing_values="DATA")
            landcover_2005_reclass.save(Reclassify_2_)


        # Process: Raster Calculator (2) (Raster Calculator) (sa)
        landcover_difference = "H:\\270\\Final_Proposal\\270P_ArcPro\\270P_ArcPro.gdb\\landcover_difference"
        Raster_Calculator_2_ = landcover_difference
        landcover_difference = landcover_2050_reclass -  landcover_2005_reclass
        landcover_difference.save(Raster_Calculator_2_)


        # Process: Reclassify (3) (Reclassify) (sa)
        landcover_new_development = "H:\\270\\Final_Proposal\\270P_ArcPro\\270P_ArcPro.gdb\\landcover_new_development"
        Reclassify_3_ = landcover_new_development
        landcover_new_development = arcpy.sa.Reclassify(in_raster=landcover_difference, reclass_field="Value", remap="-1 NODATA;0 NODATA;1 3", missing_values="DATA")
        landcover_new_development.save(Reclassify_3_)


        # Process: Raster to Polygon (Raster to Polygon) (conversion)
        new_development_polygon = "H:\\270\\Final_Proposal\\270P_ArcPro\\270P_ArcPro.gdb\\new_development_polygon"
        arcpy.conversion.RasterToPolygon(in_raster=landcover_new_development, out_polygon_features=new_development_polygon, simplify="SIMPLIFY", raster_field="VALUE", create_multipart_features="SINGLE_OUTER_PART", max_vertices_per_feature=None)

        # Process: Pinchpoint Mapper (Pinchpoint Mapper) (LinkageMapper)
        with arcpy.EnvManager(scratchWorkspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb", workspace=r"H:\270\Final_Proposal\270P_ArcPro\270P_ArcPro.gdb"):
            arcpy.LinkageMapper.PinchMapper(Project_directory=Circuitscape_output, Core_area_feature_class=habitat_cores, Core_area_field_name="OBJECTID", Resistance_raster=resistance_250m, CWD_cutoff_distance__cost-weighted_corridor__width__=1000000, Square_resistance_values_=False, Calculate_adjacent_pair_pinch_points_using_Circuitscape=True, Calculate_raster_centrality_using_Circuitscape__can_be_slow_=False, Circuitscape_mode_for_raster_centrality_calculations="All-to-one")

if __name__ == '__main__':
    Model1()
